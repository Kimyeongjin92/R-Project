html_nodes('strong') %>%
.[grep('notSympathy',.)] %>%
html_text())
date  <- c(date, html %>%
html_nodes('.score_result') %>%
html_nodes('.score_reple') %>%
html_node('dt') %>%
html_nodes('em') %>%
.[-grep('onclick',.)] %>%
html_text())
}
page
total
html %>%
html_nodes('.total')
html %>%
html_nodes('.total') %>%
html_nodes('em')
html %>%
html_nodes('.total') %>%
html_nodes('em') %>%
.[2]
html %>%
html_nodes('.total') %>%
html_nodes('em') %>%
.[2] %>%
html_text()
html %>%
html_nodes('.total') %>%
html_nodes('em') %>%
.[2] %>%
html_text() %>%
gsub(",","",.)
html %>%
html_nodes('.total') %>%
html_nodes('em') %>%
.[2] %>%
html_text() %>%
gsub(",","",.) %>%
as.numeric())
html %>%
html_nodes('.total') %>%
html_nodes('em') %>%
.[2] %>%
html_text() %>%
gsub(",","",.) %>%
as.numeric()
total <- NULL
page  <- NULL
score <- NULL
reple <- NULL
name  <- NULL
date  <- NULL
like  <- NULL
hate  <- NULL
date  <- NULL
i <- 0
for(url in urls){
i <- i + length(url)
if(i %% 10 == 0)
print(i)
html  <- read_html(url)
total <- html %>%
html_nodes('.total') %>%
html_nodes('em') %>%
.[2] %>%
html_text() %>%
gsub(",","",.) %>%
as.numeric()
page  <- ceiling(total/10)
score <- c(score, html %>%
html_nodes('.score_result') %>%
html_nodes('.star_score') %>%
html_node('em') %>%             # .이 있으면 class 없으면 tag
html_text())
reple <- c(reple, html %>%
html_nodes('.score_result') %>%
html_nodes('.score_reple') %>%
html_node('p') %>%
html_text())
name  <- c(name, html %>%
html_nodes('.score_result') %>%
html_nodes('.score_reple') %>%
html_node('dt') %>%
html_node('a') %>%
html_node('span') %>%
html_text())
like  <- c(like, html %>%
html_nodes('.btn_area') %>%
html_node('strong') %>%
html_node('span') %>%
html_text())
hate  <- c(hate ,html %>%
html_nodes('.btn_area') %>%
html_nodes('strong') %>%
.[grep('notSympathy',.)] %>%
html_text())
date  <- c(date, html %>%
html_nodes('.score_result') %>%
html_nodes('.score_reple') %>%
html_node('dt') %>%
html_nodes('em') %>%
.[-grep('onclick',.)] %>%
html_text())
}
total
page
Naver_CINE_Review
Naver_CINE_Review <- data.frame(날짜   = 날짜 <- date %>% str_replace_all("\\.","-") %>% as.Date(),
시간   = date %>% str_sub(-5),
요일   = paste0(wday(날짜,T),'요일'),
점수   = score,
좋아요 = like,
싫어요 = hate,
리플   = reple,
이름   = name)
Naver_CINE_Review
date %>% str_sub(-5) %>% hm()
paste0(year(날짜),년)
Year(날짜)
날짜 <- date %>% str_replace_all("\\.","-") %>% as.Date()
Year(날짜)
year(날짜)
paste0(year(날짜),년)
paste0(year(날짜),'년')
month(날짜)
Naver_CINE_Review <- data.frame(날짜   = 날짜 <- date %>% str_replace_all("\\.","-") %>% as.Date(),
시간   = date %>% str_sub(-5),
요일   = paste0(wday(날짜,T),'요일'),
점수   = score,
좋아요 = like,
싫어요 = hate,
이름   = name,
리플   = reple)
Naver_CINE_Review
write.xlsx(Naver_CINE_Review, file = "클레멘타인_네이버 리뷰.xlsx",
sheetName="클레멘타인",
row.names=T)
library(rvest)
library(dplyr)
library(stringr)
library(lubridate)
library(xlsx)
write.xlsx(Naver_CINE_Review, file = "클레멘타인_네이버 리뷰.xlsx",
sheetName="클레멘타인",
row.names=T)
write.xlsx(Naver_CINE_Review, file = "클레멘타인_네이버 리뷰.xlsx",
sheetName="클레멘타인",
col.names=T,row.names=F,append=F,
row.names=T)
write.xlsx(Naver_CINE_Review, file = "클레멘타인_네이버 리뷰.xlsx",
sheetName="클레멘타인",
col.names=T,row.names=F,append=F,
row.names=T)
write.xlsx(Naver_CINE_Review, file = "클레멘타인_네이버 리뷰.xlsx",
sheetName="클레멘타인",
col.names=T,row.names=F,append=F)
library(rvest)
library(dplyr)
library(stringr)
library(lubridate)
library(xlsx)
Clementine_url <- 'https://movie.naver.com/movie/bi/mi/pointWriteFormList.nhn?code=37886&type=after&isActualPointWriteExecute=false&isMileageSubscriptionAlready=false&isMileageSubscriptionReject=false&page='
urls <- NULL
for(i in 1:2104){
urls[i] <- paste0(Clementine_url,i)
}
total <- NULL
page  <- NULL
score <- NULL
reple <- NULL
name  <- NULL
date  <- NULL
like  <- NULL
hate  <- NULL
date  <- NULL
i <- 0
for(url in urls){
i <- i + length(url)
if(i %% 10 == 0)
print(i)
html  <- read_html(url)
total <- html %>%
html_nodes('.total') %>%
html_nodes('em') %>%
.[2] %>%
html_text() %>%
gsub(",","",.) %>%
as.numeric()
page  <- ceiling(total/10)
score <- c(score, html %>%
html_nodes('.score_result') %>%
html_nodes('.star_score') %>%
html_node('em') %>%             # .이 있으면 class 없으면 tag
html_text())
reple <- c(reple, html %>%
html_nodes('.score_result') %>%
html_nodes('.score_reple') %>%
html_node('p') %>%
html_text())
name  <- c(name, html %>%
html_nodes('.score_result') %>%
html_nodes('.score_reple') %>%
html_node('dt') %>%
html_node('a') %>%
html_node('span') %>%
html_text())
like  <- c(like, html %>%
html_nodes('.btn_area') %>%
html_node('strong') %>%
html_node('span') %>%
html_text())
hate  <- c(hate ,html %>%
html_nodes('.btn_area') %>%
html_nodes('strong') %>%
.[grep('notSympathy',.)] %>%
html_text())
date  <- c(date, html %>%
html_nodes('.score_result') %>%
html_nodes('.score_reple') %>%
html_node('dt') %>%
html_nodes('em') %>%
.[-grep('onclick',.)] %>%
html_text())
}
날짜 <- date %>% str_replace_all("\\.","-") %>% as.Date()
Naver_CINE_Review <- data.frame(날짜   = 날짜 <- date %>% str_replace_all("\\.","-") %>% as.Date(),
시간   = date %>% str_sub(-5),
요일   = paste0(wday(날짜,T),'요일'),
점수   = score,
좋아요 = like,
싫어요 = hate,
이름   = name,
리플   = reple)
C
Naver_CINE_Review <- data.frame(날짜   = 날짜 <- date %>% str_replace_all("\\.","-") %>% as.Date(),
시간   = date %>% str_sub(-5),
요일   = paste0(wday(날짜,T),'요일'),
점수   = score,
좋아요 = like,
싫어요 = hate,
이름   = name,
리플   = reple)
head(View(Naver_CINE_Review),100)
write.xlsx(Naver_CINE_Review, file = "클레멘타인_네이버 리뷰.xlsx",
sheetName="클레멘타인",
col.names=T,row.names=F,append=F)
year(날짜)
month(날짜)
day(날짜)
Naver_CINE_Review <- data.frame(날짜   = 날짜 <- date %>% str_replace_all("\\.","-") %>% as.Date(),
년도   = year(날짜),
월     = month(날짜),
일     = day(날짜),
시간   = date %>% str_sub(-5),
요일   = paste0(wday(날짜,T),'요일'),
점수   = score,
좋아요 = like,
싫어요 = hate,
이름   = name,
리플   = reple)
head(View(Naver_CINE_Review),100)
write.xlsx(Naver_CINE_Review, file = "클레멘타인_네이버 리뷰.xlsx",
sheetName="클레멘타인",
col.names=T,row.names=F,append=F)
Clementine<-Naver_CINE_Review$리플
Clementine<-Naver_CINE_Review$리플
length(Clementine)
install.packages('KoNLP')
install.packages('wordcloud')
install.packages('wordcloud2')
str(Clementine)
head(Clementine)
wordcloud(Clementine)
useSejongDic()
library(KoNLP)
library(wordcloud)
library(wordcloud2)
library(RColorBrewer)
# 0. 사전 추가
useSejongDic()
# 0. 사전 추가
useSejongDic()
library(KoNLP)
library(wordcloud)
library(wordcloud2)
library(RColorBrewer)
install.packages('KoNLP')        # 한글 형태소 분석
library(KoNLP)
install.packages('KoNLP')        # 한글 형태소 분석
library(KoNLP)
setwd('D:/dudwlsrla92/R-Project/Croling/네이버 영화리뷰')
getwd()
Clementine<-read.csv('클레멘타인_네이버 리뷰(2).csv')
Clementine<-Clementine$리플
length(Clementine)
str(Clementine)
head(Clementine)
library(KoNLP)
library(wordcloud)
library(wordcloud2)
library(RColorBrewer)
# 0. 사전 추가
useSejongDic()
Clementine_Noun <- sapply(Clementine, extractNoun, USE.NAMES = T)
head(Clementine_Noun)
Clementine_unlist <- unlist(Clementine_Noun)
head(Clementine)
head(Clementine,5)
sapply(head(Clementine,5), extractNoun, USE.NAMES = F)
head(Clementine,5)
library(rvest)
library(dplyr)
library(stringr)
library(lubridate)
library(xlsx)
Clementine_url <- 'https://movie.naver.com/movie/bi/mi/pointWriteFormList.nhn?code=37886&type=after&isActualPointWriteExecute=false&isMileageSubscriptionAlready=false&isMileageSubscriptionReject=false&page='
urls <- NULL
for(i in 1:10){
urls[i] <- paste0(Clementine_url,i)
}
total <- NULL
page  <- NULL
score <- NULL
reple <- NULL
name  <- NULL
date  <- NULL
like  <- NULL
hate  <- NULL
date  <- NULL
i <- 0
for(url in urls){
i <- i + length(url)
if(i %% 10 == 0)
print(i)
html  <- read_html(url)
total <- html %>%
html_nodes('.total') %>%
html_nodes('em') %>%
.[2] %>%
html_text() %>%
gsub(",","",.) %>%
as.numeric()
page  <- ceiling(total/10)
score <- c(score, html %>%
html_nodes('.score_result') %>%
html_nodes('.star_score') %>%
html_node('em') %>%             # .이 있으면 class 없으면 tag
html_text())
reple <- c(reple, html %>%
html_nodes('.score_result') %>%
html_nodes('.score_reple') %>%
html_node('p') %>%
html_text())
name  <- c(name, html %>%
html_nodes('.score_result') %>%
html_nodes('.score_reple') %>%
html_node('dt') %>%
html_node('a') %>%
html_node('span') %>%
html_text())
like  <- c(like, html %>%
html_nodes('.btn_area') %>%
html_node('strong') %>%
html_node('span') %>%
html_text())
hate  <- c(hate ,html %>%
html_nodes('.btn_area') %>%
html_nodes('strong') %>%
.[grep('notSympathy',.)] %>%
html_text())
date  <- c(date, html %>%
html_nodes('.score_result') %>%
html_nodes('.score_reple') %>%
html_node('dt') %>%
html_nodes('em') %>%
.[-grep('onclick',.)] %>%
html_text())
}
Naver_CINE_Review <- data.frame(날짜   = 날짜 <- date %>% str_replace_all("\\.","-") %>% as.Date(),
년도   = year(날짜),
월     = month(날짜),
일     = day(날짜),
시간   = date %>% str_sub(-5),
요일   = paste0(wday(날짜,T),'요일'),
점수   = score,
좋아요 = like,
싫어요 = hate,
이름   = name,
리플   = reple)
head(View(Naver_CINE_Review),100)
Clementine<-Clementine$리플
Clementine<-Naver_CINE_Review$리플
length(Clementine)
Clementine
library(KoNLP)
library(wordcloud)
library(wordcloud2)
library(RColorBrewer)
# 0. 사전 추가
useSejongDic()
sapply(Clementine, extractNoun, USE.NAMES = F)
sapply(Clementine, extractNoun, USE.NAMES = F)
library(KoNLP)
library(wordcloud)
library(wordcloud2)
library(RColorBrewer)
sapply(Clementine, extractNoun, USE.NAMES = F)
install.packages('rJava')
install.packages("rJava")
library(rJava)
sapply(Clementine, extractNoun, USE.NAMES = F)
install.packages('KoNLP')        # 한글 형태소 분석
install.packages("KoNLP")
install.packages('wordcloud')
install.packages("wordcloud")
install.packages('rJava')
install.packages("rJava")
library(KoNLP)
library(KoNLP)
sapply(Clementine, extractNoun, USE.NAMES = F)
# 0. 사전 추가
useSejongDic()
sapply(Clementine, extractNoun, USE.NAMES = F)
Naver_CINE_Review$리플
Clementine<-Clementine$리플
Clementine<-Naver_CINE_Review$리플
as.character(Clementine)
sapply(as.character(Clementine), extractNoun, USE.NAMES = F)
Clementine_Noun <- sapply(as.character(Clementine), extractNoun, USE.NAMES = F)
Clementine_Noun
head(Clementine_Noun)
Clementine_unlist <- unlist(Clementine_Noun)
Clementine_unlist
table(Clementine_unlist)
Clementine_table  <-table(Clementine_unlist)
setwd('D:/dudwlsrla92/R-Project/Croling/네이버 영화리뷰')
getwd()
Clementine<-read.csv('클레멘타인_네이버 리뷰(2).csv')
Clementine_reple<-as.character(Clementine$리플)
Clementine_reple
length(Clementine)
length(Clementine_reple)
str(Clementine_reple)
(Clementine,5)
# 2.
Clementine_Noun   <- sapply(Clementine_reple, extractNoun, USE.NAMES = F)
head(Clementine_Noun)
# 2.
Clementine_unlist <- unlist(Clementine_Noun)
Clementine_unlist
# 2.
Clementine_table  <-table(Clementine_unlist)
Clementine_unlist
# 2.
Clementine_table  <-table(Clementine_unlist)
Clementine_table
head(Clementine_table)
Clementine_unlist
# 2.
Clementine_table  <-table(Clementine_unlist)
Clementine_table
unlist(Clementine_Noun)
# 2.
Clementine_unlist <- unlist(Clementine_Noun)
Clementine_unlist
table(Clementine_unlist)
# 2.
Clementine_table  <- table(Clementine_unlist)
head(Clementine_table)
Clementine_Noun
head(Clementine_Noun)
unlist(Clementine_Noun)
# 2.
Clementine_unlist <- unlist(Clementine_Noun)
Clementine_unlist
head(Clementine_Noun)
Clementine_Noun
Clementine_unlist
Clementine_Noun
Clementine_unlist
table(Clementine_unlist)
# 2.
Clementine_table  <- table(Clementine_unlist)
wordcount_top <-head(sort(Clementine_table, decreasing = T),100)
wordcount_top
wordcount_top
Clementine_top
Clementine_top
e
# 5. sort
Clementine_top <-head(sort(Clementine_table, decreasing = T),100)
# 6. wordcloud
wordcloud(Clementine_top)
Clementine_top
# 6. wordcloud
wordcloud(names(Clementine_top),Clementine_top)
# 7. 단어 등록
mergeUserDic(data.frame(C("노잼"),"ncn"))
# 7. 단어 등록
mergeUserDic(data.frame(c("노잼"), "ncn"))
setwd()
# 1. 데이터 불러오기
setwd('D:/dudwlsrla92/R-Project/Croling/네이버 영화리뷰')
getwd()
add_dic <- readLines("클레멘타인_추가단어")
add_dic <- readLines("클레멘타인_추가단어.txt")
add_dic
length(add_dic)
for(i in 1:length(add_dic)){
mergeUserDic(data.frame(add_dic[i],"ncn"))
}
