library(stringr)
library(lubridate)
library(rvest)
library(extrafont)
library(KoNLP)
library(wordcloud)
library(wordcloud2)
library(RColorBrewer)
library(rJava)
# 1. 데이터 불러오기 ---------------------------------------------
setwd('D:/dudwlsrla92/R-Project/Croling/클레멘타인/2.클레멘타인(블로그)')
# 1. 데이터 불러오기 ---------------------------------------------
setwd('D:/dudwlsrla92/R-Project/Croling/클레멘타인/2. 클레멘타인(블로그)')
getwd()
Clementine<-read.csv('클레멘타인(네이버블로그).csv')
Clementine_reple<-as.character(Clementine$제목)
Clementine$제목
as.character(Clementine$제목)
Clementine_title<-as.character(Clementine$제목)
Clementine_txt<-as.character(Clementine$내용)
length(Clementine_reple)
str(Clementine_reple)
Clementine<-read.csv('클레멘타인(네이버블로그).csv')
Clementine_title<-as.character(Clementine$제목)
Clementine_txt<-as.character(Clementine$내용)
add_dic <- readLines("클레멘타인_추가단어.txt")
for(i in 1:length(add_dic)){
mergeUserDic(data.frame(add_dic[i],"ncn"))
}
Clementine_Noun   <- sapply(Clementine_txt, extractNoun, USE.NAMES = F)
# 2. 명사 추출 (extractNoun) -------------------------------------
Clementine_title_Noun   <- sapply(Clementine_title, extractNoun, USE.NAMES = F)
Clementine_title_Noun
Clementine_txt_Noun   <- sapply(Clementine_txt, extractNoun, USE.NAMES = F)
Clementine_txt_Noun
head(Clementine_title_Noun)
head(Clementine_txt_Noun)
# 3. 중간저장 (unlist) --------------------------------------------
write.table(unlist(Clementine_title_Noun),"클레멘타인_전처리(title).txt")
write.table(unlist(Clementine_txt_Noun),"클레멘타인_전처리(txt).txt")
Cl_title_unlist <- readLines("클레멘타인_전처리(title).txt")
Cl_txt_unlist <- readLines("클레멘타인_전처리(txt).txt")
Cl_title_unlist
unlist(Clementine_title_Noun)
unlist(Clementine_txt_Noun)
# 3. 중간저장 (unlist) --------------------------------------------
write(unlist(Clementine_title_Noun),"클레멘타인_전처리(title).txt")
write(unlist(Clementine_txt_Noun),"클레멘타인_전처리(txt).txt")
Cl_title_unlist <- readLines("클레멘타인_전처리(title).txt")
Cl_txt_unlist <- readLines("클레멘타인_전처리(txt).txt")
Cl_title_unlist
Cl_txt_unlist
head(Cl_title_unlist)
head(Cl_txt_unlist)
# 3. 중간저장 (unlist) --------------------------------------------
write(unlist(Clementine_title_Noun),"클레멘타인_전처리(title).txt")
write(unlist(Clementine_txt_Noun),"클레멘타인_전처리(txt).txt")
Cl_title_unlist <- readLines("클레멘타인_전처리(title).txt")
Cl_txt_unlist <- readLines("클레멘타인_전처리(txt).txt")
head(Cl_title_unlist)
head(Cl_txt_unlist)
# 4. 전처리 (1)_정규식 --------------------------------------------
Cl_filter <- gsub("\\d+","",Cl_txt_unlist)
Cl_filter <- gsub("ㄱ-ㅎ","",Cl_txt_unlist)
Cl_filter <- gsub("ㅜ|ㅠ","",Cl_txt_unlist)
Cl_filter <- gsub('[~^!@#$%&*()_+=?<>]','',Cl_txt_unlist)
Cl_filter <- gsub("클레멘타인\\S*","클레멘타인",Cl_txt_unlist)
Cl_filter <- gsub("나았습니\\S*","병이나았어",Cl_txt_unlist)
Cl_filter <- gsub("감사합니\\S*","감사해",Cl_txt_unlist)
Cl_filter <- gsub('[~^!@#$%&*()_+=?<>]','',Cl_txt_unlist)
Cl_filter <- gsub(" ","",Cl_txt_unlist)
Cl_filter  <- Filter(function(x){nchar(x) >= 2 & nchar(x) <= 8},Cl_filter)
# 4. table ------------------------------------------------------
Cl_table <- table(Cl_filter2)
# 4. table ------------------------------------------------------
Cl_table <- table(Cl_filter)
head(Cl_table)
# 5. sort -------------------------------------------------------
Cl_top    <- sort(Cl_table, decreasing = T)
head(Cl_top,100)
# 4. 전처리 (2)_gsub --------------------------------------------
txt <- readLines("클레멘타인gsub.txt")
# 4. 전처리 (2)_gsub --------------------------------------------
txt <- readLines("클레멘타인gsub.txt")
# 4. 전처리 (2)_gsub --------------------------------------------
txt <- readLines("클레멘타인gsub.txt")
txt
i <- 0
for(i in 1:length(txt)){
Cl_filter <- gsub((txt[i]),"",Cl_filter)
}
Cl_filter2  <- Filter(function(x){nchar(x) >= 2 & nchar(x) <= 6},Cl_filter)
head(Cl_filter2)
# 5. 중간저장 write ---------------------------------------------
write(Cl_filter2,"클레멘타인_전처리2(txt).txt")
Cl <- readLines("클레멘타인_전처리2(txt).txt")
# 4. table ------------------------------------------------------
Cl_table <- table(Cl_filter)
head(Cl_table)
# 4. table ------------------------------------------------------
Cl_table <- table(Cl)
head(Cl_table)
# 5. sort -------------------------------------------------------
Cl_top    <- sort(Cl_table, decreasing = T)
head(Cl_top,100)
Cl_title_unlist <- readLines("클레멘타인_전처리(title).txt")
Cl_txt_unlist <- readLines("클레멘타인_전처리(txt).txt")
# 4. 전처리 (1)_정규식 --------------------------------------------
Cl_filter <- gsub("\\d+","",Cl_txt_unlist)
Cl_filter <- gsub("ㄱ-ㅎ","",Cl_filter)
Cl_filter <- gsub("ㅜ|ㅠ","",Cl_filter)
Cl_filter <- gsub('[~^!@#$%&*()_+=?<>]','',Cl_filter)
Cl_filter <- gsub("클레멘타인\\S*","클레멘타인",Cl_filter)
Cl_filter <- gsub("나았습니\\S*","병이나았어",Cl_filter)
Cl_filter <- gsub("감사합니\\S*","감사해",Cl_filter)
Cl_filter <- gsub('[~^!@#$%&*()_+=?<>]','',Cl_filter)
Cl_filter <- gsub(" ","",Cl_filter)
Cl_filter  <- Filter(function(x){nchar(x) >= 2 & nchar(x) <= 8},Cl_filter)
# 4. 전처리 (2)_gsub --------------------------------------------
txt <- readLines("클레멘타인gsub.txt")
i <- 0
for(i in 1:length(txt)){
Cl_filter <- gsub((txt[i]),"",Cl_filter)
}
Cl_filter2  <- Filter(function(x){nchar(x) >= 2 & nchar(x) <= 6},Cl_filter)
head(Cl_filter2)
# 5. 중간저장 write ---------------------------------------------
write(Cl_filter2,"클레멘타인_전처리2(txt).txt")
Cl <- readLines("클레멘타인_전처리2(txt).txt")
head(Cl)
# 4. table ------------------------------------------------------
Cl_table <- table(Cl)
head(Cl_table)
# 5. sort -------------------------------------------------------
Cl_top    <- sort(Cl_table, decreasing = T)
head(Cl_top,100)
# 4. 전처리 (1)_정규식 --------------------------------------------
Cl_filter <- gsub("\\d+","",Cl_txt_unlist)
Cl_filter <- gsub("ㄱ-ㅎ","",Cl_filter)
Cl_filter <- gsub("ㅜ|ㅠ","",Cl_filter)
Cl_filter <- gsub('[~^!@#$%&*()_+=?<>]','',Cl_filter)
Cl_filter <- gsub("클레멘타인\\S*","클레멘타인",Cl_filter)
Cl_filter <- gsub("나았습니\\S*","병이나았어",Cl_filter)
Cl_filter <- gsub("감사합니\\S*","감사해",Cl_filter)
Cl_filter <- gsub('[~^!"@#$%&*()_+=?<>]','',Cl_filter)
Cl_filter <- gsub(" ","",Cl_filter)
Cl_filter  <- Filter(function(x){nchar(x) >= 2 & nchar(x) <= 8},Cl_filter)
# 4. 전처리 (2)_gsub --------------------------------------------
txt <- readLines("클레멘타인gsub.txt")
i <- 0
for(i in 1:length(txt)){
Cl_filter <- gsub((txt[i]),"",Cl_filter)
}
Cl_filter2  <- Filter(function(x){nchar(x) >= 2 & nchar(x) <= 6},Cl_filter)
head(Cl_filter2)
# 5. 중간저장 write ---------------------------------------------
write(Cl_filter2,"클레멘타인_전처리2(txt).txt")
Cl <- readLines("클레멘타인_전처리2(txt).txt")
head(Cl)
# 4. table ------------------------------------------------------
Cl_table <- table(Cl)
head(Cl_table)
# 5. sort -------------------------------------------------------
Cl_top    <- sort(Cl_table, decreasing = T)
head(Cl_top,100)
# 4. 전처리 (1)_정규식 --------------------------------------------
Cl_filter <- gsub("\\d+","",Cl_txt_unlist)
Cl_filter <- gsub("ㄱ-ㅎ","",Cl_filter)
Cl_filter <- gsub("ㅜ|ㅠ","",Cl_filter)
Cl_filter <- gsub('[~^!@#$%&*()_+=?<>]','',Cl_filter)
Cl_filter <- gsub("클레멘타인\\S*","클레멘타인",Cl_filter)
Cl_filter <- gsub("나았습니\\S*","병이나았어",Cl_filter)
Cl_filter <- gsub("감사합니\\S*","감사해",Cl_filter)
Cl_filter <- gsub('[~^!"@#$%&*()_+=?<>]','',Cl_filter)
Cl_filter <- gsub(" ","",Cl_filter)
Cl_filter  <- Filter(function(x){nchar(x) >= 2 & nchar(x) <= 8},Cl_filter)
# 4. 전처리 (2)_gsub --------------------------------------------
txt <- readLines("클레멘타인gsub.txt")
i <- 0
for(i in 1:length(txt)){
Cl_filter <- gsub((txt[i]),"",Cl_filter)
}
Cl_filter2  <- Filter(function(x){nchar(x) >= 2 & nchar(x) <= 6},Cl_filter)
head(Cl_filter2)
# 5. 중간저장 write ---------------------------------------------
write(Cl_filter2,"클레멘타인_전처리2(txt).txt")
Cl <- readLines("클레멘타인_전처리2(txt).txt")
head(Cl)
# 4. table ------------------------------------------------------
Cl_table <- table(Cl)
head(Cl_table)
# 5. sort -------------------------------------------------------
Cl_top    <- sort(Cl_table, decreasing = T)
head(Cl_top,100)
# 4. 전처리 (1)_정규식 --------------------------------------------
Cl_filter <- gsub("\\d+","",Cl_txt_unlist)
Cl_filter <- gsub("ㄱ-ㅎ","",Cl_filter)
Cl_filter <- gsub("ㅜ|ㅠ","",Cl_filter)
Cl_filter <- gsub('[~^!@#$%&*()_+=?<>]','',Cl_filter)
Cl_filter <- gsub("클레멘타인\\S*","클레멘타인",Cl_filter)
Cl_filter <- gsub("'클레멘타인\\S*","클레멘타인",Cl_filter)
Cl_filter <- gsub("[클레멘타인\\S*","클레멘타인",Cl_filter)
Cl_filter <- gsub("나았습니\\S*","병이나았어",Cl_filter)
Cl_filter <- gsub("감사합니\\S*","감사해",Cl_filter)
Cl_filter <- gsub('[~^!"@#$%&*()_+=?<>]','',Cl_filter)
# 4. 전처리 (1)_정규식 --------------------------------------------
Cl_filter <- gsub("\\d+","",Cl_txt_unlist)
Cl_filter <- gsub("ㄱ-ㅎ","",Cl_filter)
Cl_filter <- gsub("ㅜ|ㅠ","",Cl_filter)
Cl_filter <- gsub('[~^!@#$%&*()_+=?<>]','',Cl_filter)
Cl_filter <- gsub("클레멘타인\\S*","클레멘타인",Cl_filter)
Cl_filter <- gsub("'클레멘타인\\S*","클레멘타인",Cl_filter)
Cl_filter <- gsub("[클레멘타인\\S*","클레멘타인",Cl_filter)
# 4. 전처리 (1)_정규식 --------------------------------------------
Cl_filter <- gsub("\\d+","",Cl_txt_unlist)
Cl_filter <- gsub("ㄱ-ㅎ","",Cl_filter)
Cl_filter <- gsub("ㅜ|ㅠ","",Cl_filter)
Cl_filter <- gsub("클레멘타인\\S*","클레멘타인",Cl_filter)
Cl_filter <- gsub("'클레멘타인\\S*","클레멘타인",Cl_filter)
Cl_filter <- gsub('[~^!"@#$%&*()_+=?<>]','',Cl_filter)
Cl_filter <- gsub(" ","",Cl_filter)
Cl_filter  <- Filter(function(x){nchar(x) >= 2 & nchar(x) <= 8},Cl_filter)
# 4. 전처리 (2)_gsub --------------------------------------------
txt <- readLines("클레멘타인gsub.txt")
i <- 0
for(i in 1:length(txt)){
Cl_filter <- gsub((txt[i]),"",Cl_filter)
}
Cl_filter2  <- Filter(function(x){nchar(x) >= 2 & nchar(x) <= 6},Cl_filter)
head(Cl_filter2)
# 5. 중간저장 write ---------------------------------------------
write(Cl_filter2,"클레멘타인_전처리2(txt).txt")
Cl <- readLines("클레멘타인_전처리2(txt).txt")
head(Cl)
# 4. table ------------------------------------------------------
Cl_table <- table(Cl)
head(Cl_table)
# 5. sort -------------------------------------------------------
Cl_top    <- sort(Cl_table, decreasing = T)
head(Cl_top,100)
# 4. 전처리 (2)_gsub --------------------------------------------
txt <- readLines("클레멘타인gsub.txt")
i <- 0
for(i in 1:length(txt)){
Cl_filter <- gsub((txt[i]),"",Cl_filter)
}
Cl_filter2  <- Filter(function(x){nchar(x) >= 2 & nchar(x) <= 6},Cl_filter)
head(Cl_filter2)
# 5. 중간저장 write ---------------------------------------------
write(Cl_filter2,"클레멘타인_전처리2(txt).txt")
Cl <- readLines("클레멘타인_전처리2(txt).txt")
head(Cl)
# 4. table ------------------------------------------------------
Cl_table <- table(Cl)
head(Cl_table)
# 5. sort -------------------------------------------------------
Cl_top    <- sort(Cl_table, decreasing = T)
head(Cl_top,100)
# 4. 전처리 (2)_gsub --------------------------------------------
txt <- readLines("클레멘타인gsub.txt")
i <- 0
for(i in 1:length(txt)){
Cl_filter <- gsub((txt[i]),"",Cl_filter)
}
Cl_filter2  <- Filter(function(x){nchar(x) >= 2 & nchar(x) <= 6},Cl_filter)
head(Cl_filter2)
# 5. 중간저장 write ---------------------------------------------
write(Cl_filter2,"클레멘타인_전처리2(txt).txt")
Cl <- readLines("클레멘타인_전처리2(txt).txt")
head(Cl)
# 4. table ------------------------------------------------------
Cl_table <- table(Cl)
head(Cl_table)
# 5. sort -------------------------------------------------------
Cl_top    <- sort(Cl_table, decreasing = T)
head(Cl_top,100)
# 4. 전처리 (1)_정규식 --------------------------------------------
Cl_filter <- gsub("\\d+","",Cl_txt_unlist)
Cl_filter <- gsub("ㄱ-ㅎ","",Cl_filter)
Cl_filter <- gsub("ㅜ|ㅠ","",Cl_filter)
Cl_filter <- gsub("클레멘타인\\S*","클레멘타인",Cl_filter)
Cl_filter <- gsub("'클레멘타인\\S*","클레멘타인",Cl_filter)
Cl_filter <- gsub('[~^!"@#$%&*()_+=?<>]','',Cl_filter)
Cl_filter <- gsub(" ","",Cl_filter)
Cl_filter  <- Filter(function(x){nchar(x) >= 2 & nchar(x) <= 6},Cl_filter)
# 4. 전처리 (2)_gsub --------------------------------------------
txt <- readLines("클레멘타인gsub.txt")
i <- 0
for(i in 1:length(txt)){
Cl_filter <- gsub((txt[i]),"",Cl_filter)
}
Cl_filter2  <- Filter(function(x){nchar(x) >= 2 & nchar(x) <= 6},Cl_filter)
head(Cl_filter2)
# 5. 중간저장 write ---------------------------------------------
write(Cl_filter2,"클레멘타인_전처리2(txt).txt")
Cl <- readLines("클레멘타인_전처리2(txt).txt")
head(Cl)
# 4. table ------------------------------------------------------
Cl_table <- table(Cl)
head(Cl_table)
# 5. sort -------------------------------------------------------
Cl_top    <- sort(Cl_table, decreasing = T)
head(Cl_top,100)
# 4. 전처리 (1)_정규식 --------------------------------------------
Cl_filter <- gsub("\\d+","",Cl_txt_unlist)
Cl_filter <- gsub("ㄱ-ㅎ","",Cl_filter)
Cl_filter <- gsub("ㅜ|ㅠ","",Cl_filter)
Cl_filter <- gsub("클레멘타인\\S*","클레멘타인",Cl_filter)
Cl_filter <- gsub("'클레멘타인\\S*","클레멘타인",Cl_filter)
Cl_filter <- gsub('[~^!"@#$%&*()_+=?<>]','',Cl_filter)
Cl_filter <- gsub(" ","",Cl_filter)
Cl_filter  <- Filter(function(x){nchar(x) >= 2 & nchar(x) <= 6},Cl_filter)
# 4. 전처리 (2)_gsub --------------------------------------------
txt <- readLines("클레멘타인gsub.txt")
i <- 0
for(i in 1:length(txt)){
Cl_filter <- gsub((txt[i]),"",Cl_filter)
}
Cl_filter2  <- Filter(function(x){nchar(x) >= 2 & nchar(x) <= 5},Cl_filter)
head(Cl_filter2)
# 5. 중간저장 write ---------------------------------------------
write(Cl_filter2,"클레멘타인_전처리2(txt).txt")
Cl <- readLines("클레멘타인_전처리2(txt).txt")
head(Cl)
# 4. table ------------------------------------------------------
Cl_table <- table(Cl)
head(Cl_table)
# 5. sort -------------------------------------------------------
Cl_top    <- sort(Cl_table, decreasing = T)
head(Cl_top,100)
# 4. 전처리 (2)_gsub --------------------------------------------
txt <- readLines("클레멘타인gsub.txt")
i <- 0
for(i in 1:length(txt)){
Cl_filter <- gsub((txt[i]),"",Cl_filter)
}
Cl_filter2  <- Filter(function(x){nchar(x) >= 2 & nchar(x) <= 5},Cl_filter)
head(Cl_filter2)
# 5. 중간저장 write ---------------------------------------------
write(Cl_filter2,"클레멘타인_전처리2(txt).txt")
Cl <- readLines("클레멘타인_전처리2(txt).txt")
head(Cl)
# 4. table ------------------------------------------------------
Cl_table <- table(Cl)
head(Cl_table)
# 5. sort -------------------------------------------------------
Cl_top    <- sort(Cl_table, decreasing = T)
head(Cl_top,100)
windowsFonts(baedal=windowsFont("배달의민족 도현"))
# 4. 전처리 (2)_gsub --------------------------------------------
txt <- readLines("클레멘타인gsub.txt")
i <- 0
for(i in 1:length(txt)){
Cl_filter <- gsub((txt[i]),"",Cl_filter)
}
Cl_filter2  <- Filter(function(x){nchar(x) >= 2 & nchar(x) <= 5},Cl_filter)
head(Cl_filter2)
# 5. 중간저장 write ---------------------------------------------
write(Cl_filter2,"클레멘타인_전처리2(txt).txt")
Cl <- readLines("클레멘타인_전처리2(txt).txt")
head(Cl)
# 4. table ------------------------------------------------------
Cl_table <- table(Cl)
head(Cl_table)
# 5. sort -------------------------------------------------------
Cl_top    <- sort(Cl_table, decreasing = T)
head(Cl_top,100)
windowsFonts(baedal=windowsFont("배달의민족 도현"))
# 전처리와 sort가 완료된 table 파일로 만든다.
a <- "white"
a <- c(a, rep("gold", length.out=Cl_top))
wordcloud2(Cl_top,
size=0.7,
minSize=0,
gridSize=8,                # cloud 크기(2)
col=a,           # 색 변경 random-dark, random-light, rep(brewer.pal(8, "Dark2"), length.out=100)
rotateRatio=0,             # 회전 정도 조절
backgroundColor = "black", # 배경 색
shape = 'star',            # circle
shuffle = T,
fontFamily = 'baedal',
fontWeight = 'bold',
ellipticity = 0.65)         # 그림의 평형정도
# 4. 전처리 (1)_정규식 --------------------------------------------
Cl_filter <- gsub("\\d+","",Cl_txt_unlist)
Cl_filter <- gsub("ㄱ-ㅎ","",Cl_filter)
Cl_filter <- gsub("ㅜ|ㅠ","",Cl_filter)
Cl_filter <- gsub("클레멘타인\\S*","클레멘타인",Cl_filter)
Cl_filter <- gsub("'클레멘타인\\S*","",Cl_filter)
Cl_filter <- gsub('[~^!"@#$%&*()_+=?<>]','',Cl_filter)
Cl_filter <- gsub(" ","",Cl_filter)
Cl_filter  <- Filter(function(x){nchar(x) >= 2 & nchar(x) <= 6},Cl_filter)
# 4. 전처리 (2)_gsub --------------------------------------------
txt <- readLines("클레멘타인gsub.txt")
i <- 0
for(i in 1:length(txt)){
Cl_filter <- gsub((txt[i]),"",Cl_filter)
}
Cl_filter2  <- Filter(function(x){nchar(x) >= 2 & nchar(x) <= 5},Cl_filter)
head(Cl_filter2)
# 5. 중간저장 write ---------------------------------------------
write(Cl_filter2,"클레멘타인_전처리2(txt).txt")
Cl <- readLines("클레멘타인_전처리2(txt).txt")
head(Cl)
# 4. table ------------------------------------------------------
Cl_table <- table(Cl)
head(Cl_table)
# 5. sort -------------------------------------------------------
Cl_top    <- sort(Cl_table, decreasing = T)
head(Cl_top,100)
windowsFonts(baedal=windowsFont("배달의민족 도현"))
palete <- brewer.pal(9,"Set3")
pal <- brewer.pal(5,"YlGn")
# 4. 전처리 (1)_정규식 --------------------------------------------
Cl_filter <- gsub("\\d+","",Cl_txt_unlist)
Cl_filter <- gsub("ㄱ-ㅎ","",Cl_filter)
Cl_filter <- gsub("ㅜ|ㅠ","",Cl_filter)
Cl_filter <- gsub("'클레멘타인\\S*","",Cl_filter)
Cl_filter <- gsub('[~^!"@#$%&*()_+=?<>]','',Cl_filter)
Cl_filter <- gsub(" ","",Cl_filter)
Cl_filter  <- Filter(function(x){nchar(x) >= 2 & nchar(x) <= 6},Cl_filter)
# 4. 전처리 (2)_gsub --------------------------------------------
txt <- readLines("클레멘타인gsub.txt")
i <- 0
for(i in 1:length(txt)){
Cl_filter <- gsub((txt[i]),"",Cl_filter)
}
Cl_filter2  <- Filter(function(x){nchar(x) >= 2 & nchar(x) <= 5},Cl_filter)
head(Cl_filter2)
# 5. 중간저장 write ---------------------------------------------
write(Cl_filter2,"클레멘타인_전처리2(txt).txt")
Cl <- readLines("클레멘타인_전처리2(txt).txt")
head(Cl)
# 4. table ------------------------------------------------------
Cl_table <- table(Cl)
head(Cl_table)
# 5. sort -------------------------------------------------------
Cl_top    <- sort(Cl_table, decreasing = T)
head(Cl_top,100)
# 전처리와 sort가 완료된 table 파일로 만든다.
a <- "white"
a <- c(a, rep("gold", length.out=Cl_top))
wordcloud2(Cl_top,
size=0.7,
minSize=0,
gridSize=8,                # cloud 크기(2)
col=a,           # 색 변경 random-dark, random-light, rep(brewer.pal(8, "Dark2"), length.out=100)
rotateRatio=0,             # 회전 정도 조절
backgroundColor = "black", # 배경 색
shape = 'star',            # circle
shuffle = T,
fontFamily = 'baedal',
fontWeight = 'bold',
ellipticity = 0.65)         # 그림의 평형정도
# 4. 전처리 (1)_정규식 --------------------------------------------
Cl_filter <- gsub("\\d+","",Cl_txt_unlist)
Cl_filter <- gsub("ㄱ-ㅎ","",Cl_filter)
Cl_filter <- gsub("ㅜ|ㅠ","",Cl_filter)
Cl_filter <- gsub('[~^!"@#$%&*()_+=?<>]','',Cl_filter)
Cl_filter <- gsub(" ","",Cl_filter)
Cl_filter  <- Filter(function(x){nchar(x) >= 2 & nchar(x) <= 6},Cl_filter)
# 4. 전처리 (2)_gsub --------------------------------------------
txt <- readLines("클레멘타인gsub.txt")
i <- 0
for(i in 1:length(txt)){
Cl_filter <- gsub((txt[i]),"",Cl_filter)
}
Cl_filter2  <- Filter(function(x){nchar(x) >= 2 & nchar(x) <= 5},Cl_filter)
head(Cl_filter2)
# 5. 중간저장 write ---------------------------------------------
write(Cl_filter2,"클레멘타인_전처리2(txt).txt")
Cl <- readLines("클레멘타인_전처리2(txt).txt")
head(Cl)
# 4. table ------------------------------------------------------
Cl_table <- table(Cl)
head(Cl_table)
# 5. sort -------------------------------------------------------
Cl_top    <- sort(Cl_table, decreasing = T)
head(Cl_top,100)
windowsFonts(baedal=windowsFont("배달의민족 도현"))
palete <- brewer.pal(9,"Set3")
pal <- brewer.pal(5,"YlGn")
pal1<- brewer.pal(7,"YlOrRd")
green <- brewer.pal(6,"RdYlGn")
red <- brewer.pal(7,"YlOrRd")
blue <- brewer.pal(6,"Blues")
set <- brewer.pal(7, "Set3")
pp <- brewer.pal(7,"RdYlGn")
par(bg="black")
wordcloud(head(names(Cl_top),1000),
freq=Cl_top,   #
scale=c(3,0.1),   # 빈도가 가장 큰 단어와 가장 빈도가 작은 단어 폰트 사이 크기
rot.per=0.25,     # 90도 회정해서 보여줄 단어 비율.
min.freq=1,       # 이 값 이상 언급된 단어만 출력.
max.words=1000,   # 빈도 3이상 100미만 단어 표현.
random.order=F,   # (F)빈도가 큰 단어를 중앙에 두도록 함.
random.color=F,   # (T)색상랜덤/(F)빈도수순으로 색상표현.
colors=palete,
family="baedal")
legend('top',1,"클레멘타인_WordCloud",
cex=0.8,
fill=NA,
border=NA,
bg="white",
text.col="red",
text.font=2,
box.col="red")
